<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="2" total="6" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="flipSuite" duration-ms="259" started-at="2019-12-01T16:05:25 IST" finished-at="2019-12-01T16:05:26 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="259" started-at="2019-12-01T16:05:25 IST" finished-at="2019-12-01T16:05:26 IST">
      <class name="flipWrapper.FunctionalityOne">
        <test-method status="PASS" signature="setup()[pri:0, instance:flipWrapper.FunctionalityOne@694e1548]" name="setup" is-config="true" duration-ms="688" started-at="2019-12-01T16:05:25 IST" finished-at="2019-12-01T16:05:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="functionality1()[pri:0, instance:flipWrapper.FunctionalityOne@694e1548]" name="functionality1" duration-ms="32" started-at="2019-12-01T16:05:25 IST" finished-at="2019-12-01T16:05:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:flipWrapper.FunctionalityOne@694e1548]" name="getResult" is-config="true" duration-ms="47" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1 status=SUCCESS method=FunctionalityOne.functionality1()[pri:0, instance:flipWrapper.FunctionalityOne@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="functionality1Test2()[pri:0, instance:flipWrapper.FunctionalityOne@694e1548]" name="functionality1Test2" duration-ms="4" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Sun] but found [Krishna]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Sun] but found [Krishna]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at flipWrapper.FunctionalityOne.functionality1Test2(FunctionalityOne.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality1Test2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:flipWrapper.FunctionalityOne@694e1548]" name="getResult" is-config="true" duration-ms="16" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality1Test2 status=FAILURE method=FunctionalityOne.functionality1Test2()[pri:0, instance:flipWrapper.FunctionalityOne@694e1548] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:flipWrapper.FunctionalityOne@694e1548]" name="tearDown" is-config="true" duration-ms="1847" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- flipWrapper.FunctionalityOne -->
      <class name="flipWrapper.FunctionalityTwo">
        <test-method status="PASS" signature="functionality2()[pri:0, instance:flipWrapper.FunctionalityTwo@1c3a4799]" name="functionality2" duration-ms="4" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:flipWrapper.FunctionalityTwo@1c3a4799]" name="getResult" is-config="true" duration-ms="4" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality2 status=SUCCESS method=FunctionalityTwo.functionality2()[pri:0, instance:flipWrapper.FunctionalityTwo@1c3a4799] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="functionality2Test2()[pri:0, instance:flipWrapper.FunctionalityTwo@1c3a4799]" name="functionality2Test2" duration-ms="8" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Sun] but found [Krishna]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Sun] but found [Krishna]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at flipWrapper.FunctionalityTwo.functionality2Test2(FunctionalityTwo.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functionality2Test2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:flipWrapper.FunctionalityTwo@1c3a4799]" name="getResult" is-config="true" duration-ms="4" started-at="2019-12-01T16:05:26 IST" finished-at="2019-12-01T16:05:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=functionality2Test2 status=FAILURE method=FunctionalityTwo.functionality2Test2()[pri:0, instance:flipWrapper.FunctionalityTwo@1c3a4799] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- flipWrapper.FunctionalityTwo -->
    </test> <!-- Test -->
  </suite> <!-- flipSuite -->
</testng-results>
